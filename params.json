{"name":"Jsfornoob","tagline":"","body":"# Javascript pour les débutants\r\n\r\n## 1. Javascript\r\n\r\n### Pourquoi le javascript ?\r\n\r\nLe javascript est un language à la fois simple d'approche et facile à utiliser pour les débutant mais très puissant et complexe pour les experts. Il fonctionne sur tout les navigateurs modernes ( front-end ) ainsi que coté serveur ( back-end ) avec Node.js.\r\n\r\n### Les outils\r\n\r\n**Votre navigateur** contient déja tout pour vos premières lignes de javascript, un simple `CMD+MAJ+J` sur MAC ou `CTRL+MAJ+J` sur Windows/Linux ouvre la console sur votre navigateur chrome.\r\n> Ouvrez Chrome, et la console et écrivez `alert('Hello Le Wagon')`.\r\n\r\n**jsFiddle** : un éditeur en ligne --> http://jsfiddle.net/\r\n\r\nUn editeur de texte comme **Sublime Text** ou **Atom** ( qui est d'ailleur écrit entièrement en javascript ) ou simplement Notepad ou Textedit.\r\n\r\n### Les variables\r\n\r\nUne variable est un identifiant ( unique ) permetant de stocker une donnée ( texte , nombre ou autre )\r\n\r\nPour créer une variable, il faut utiliser l'operateur `var`\r\n> Dans la console : `var maVariable` ensuite `maVariable`\r\n\r\nDans cet exemple nous venons de créer une variable vide, d'où la réponse `undefined` de la console, nous allons voir comment lui attribuer une donnée ( une assignation )\r\n\r\n### Les types\r\n\r\nJavascript est un language non typé, ça veut dire que l'on est pas obligé de renseigner à l'avance ce que notre variable va contenir, c'est ce que l'on lui assigne qui va renseigner son type\r\n\r\n- `number` : contient un **nombre**\r\n- `string` : contient du **texte**, toujours entourés de simple (`'`) ou double guillements(`\"`)\r\n- `boolean` : peut contenir **true** ou **false**, vrai ou faux.\r\n\r\n> Dans la console : `typeof(4)` , `typeof('Hello')`, `typeof(true)`\r\n\r\nj'ai volontairement omis les autres, on les verra plus tard\r\n\r\n### Les opérateurs\r\n\r\n##### L'opérateur d'assignation\r\n\r\n`=` permet d'assigner une donnée à une variable ( à ne pas confondre avec l'égalité en mathématique )\r\n> Dans la console `maVariable = \"Bonjour\"`\r\n\r\nIl en existe d'autres comme `+=`,`-=`...\r\n\r\n##### Les opérateurs arithmétiques\r\n\r\nCe sont simplement les signes mathématiques que l'on connait depuis l'école primaire: **addition, soustraction, multiplication et division**.\r\n\r\n- `+` : Addition\r\n- `-` : Soustraction\r\n- `/` : Division\r\n- `*` : Multiplication, ne pas utiliser le `x` qui n'est qu'un simple caractère\r\n- `%` : Modulo, le reste d'une division\r\n\r\n> Dans la console : `10+10`,`5*3`,`10/10`,`10-3`,`9%2`\r\n\r\n##### Les opérateurs de comparaison\r\n\r\nLes opérateurs de comparaison retourne un booléen, donc un vrai ou un faux.\r\n\r\n- `==` : égal ( `===` égalité stricte )\r\n- `!=` : non égal\r\n- `>` : supérieur ( `>=` , supérieur ou égal )\r\n- `<` : inférieur ( `<=` , inférieur ou égal )\r\n\r\n> Dans la console vous pouvez tester tout les opérateurs avec des valeurs `5>3` , `5 == \"5\"`\r\n\r\nSi vous voulez en savoir plus sur les [Expressions et Opérateurs](https://developer.mozilla.org/fr/docs/Web/JavaScript/Guide/Expressions_et_Op%C3%A9rateurs)\r\n\r\n### Les fonctions\r\n\r\nTODO\r\n\r\n### IF\r\n\r\nTODO\r\n\r\n### Le DOM\r\n\r\nLe DOM = Document Object Model, en plus simple c'est ce qu'il y a sous le capot du navigateur, un emsemble d'information sous forme d'un arbre avec des noeuds qui représentent chaque partie d'une page HTML. C'est la ou sont stockée la taille, la couleur et d'autre information pour chaque balise html d'une page web.\r\n\r\n> Ouvrez la console, cliquez sur **\"Elements\"** , séléctionez une balise html ( par exemple `<body>` ) et ensuite cliquez sur **\"Propriétés\"** dans le bloc de droite, voila c'est ça le DOM\r\n\r\nLe javascript peut interagir avec le DOM de la page pour modifier des informations. Mais il y a un grand MAIS, le DOM est en partie standardisé mais pas completement sur tout les navigateurs ( même parfois entre version ). En plus simple, il faut adapter le code selon le navigateur dans certains cas, ce qui demande une certaine expérience et ralentit le developpement.\r\n\r\n## 2. jQuery\r\n\r\n### C'est quoi jQuery ?\r\n\r\njQuery est une librairie qui permet de faciliter l'usage du javascript, simplifie et accèlere le developpement, et surtout améliore la compatibilité entre les navigateurs.\r\n\r\nLa documentation complète de jQuery : [api.jquery.com](http://api.jquery.com/)\r\n\r\n### Le selecteur\r\n\r\nEn javascript pur, selectionner un noeud HTML est une tache pénible et compliquée.\r\n\r\nEn jQuery, le selecteur utilise la logique des sélécteurs CSS.\r\n\r\n> Ouvrez [jsFiddle](http://jsfiddle.net/)\r\n>\r\n> Dans la case \"javascript\", écrivez `$('.montitre')`\r\n>\r\n> Rien ne se passe ? Normal nous avons séléctionné notre élément mais rien de plus\r\n>\r\n> On ajoute `console.log($('.montitre'))` , on survole l'élément dans la fenetre firebug, et notre élément devient jaune dans la page, c'est bon il est sélectionné !\r\n> Si l'on veut changer la couleur de la page il sufft d'utiliser la methode `css()`sur notre élément.  `$('.montitre').css('color','red')`\r\n\r\n[En savoir plus sur les selecteurs dans la doc de jquery](http://api.jquery.com/category/selectors/)\r\n\r\n### Les évenements\r\n\r\njQuery facilite l'utilisation des évenements, donc capter les interactions de l'utilisateur avec notre page web.\r\n\r\n> Retournons à notre fiddle,avec le selecteur nous allons selectionner le bouton et lui ajouter un événement pour modifier la couleur du titre de la page\r\n```\r\n$('.btn').click(function(){\r\n    $('.montitre').css('color','red');\r\n});\r\n```\r\n>un click sur le bouton \"go\" et la couleur passe au rouge !\r\n\r\n\r\n### Les requêtes ajax\r\n\r\n\r\n\r\n## 3. Introduction aux frameworks : ember.js","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}